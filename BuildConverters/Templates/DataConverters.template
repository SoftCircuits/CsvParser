// Copyright (c) 2019-2021 Jonathan Wood (www.softcircuits.com)
// Licensed under the MIT license.
//
using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

[assembly:InternalsVisibleTo("CsvParserTests")]

namespace SoftCircuits.CsvParser
{
    internal static class DataConverters
    {
        private static readonly Dictionary<Type, Func<IDataConverter>> ConverterLookup = new Dictionary<Type, Func<IDataConverter>>
        {
{@DataConvertersData}        };

        /// <summary>
        /// Returns the data converter for the specified type. Returns an instance
        /// of <see cref="UnsupportedConverter"></see> if there are no matching
        /// types.
        /// </summary>
        /// <param name="type">The type to find a converter for.</param>
        /// <returns>Returns a class that derives from
        /// <see cref="DataConverter{T}"></see>.</returns>
        public static IDataConverter GetConverter(Type type)
        {
            return ConverterLookup.TryGetValue(type, out Func<IDataConverter>? func) ?
                func() :
                new UnsupportedTypeConverter(type);
        }
    }
}
